/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
  */

      html, body {
      min-height: 100%;
      }
      body, div, form, input, select, textarea, label, p {
      padding: 0;
      margin: 0;
      outline: none;
      font-family: Roboto, Arial, sans-serif;
      font-size: 14px;
      color: #666;
      line-height: 22px;
      }
      h1 {
      position: absolute;
      margin: 0;
      font-size: 40px;
      color: #fff;
      z-index: 2;
      line-height: 83px;
      }
      textarea {
      width: calc(100% - 12px);
      padding: 5px;
      }
      .testbox {
      display: flex;
      justify-content: center;
      align-items: center;
      height: inherit;
      padding: 10%;
      }
      form {
      width: 100%;
      padding: 20px;
      border-radius: 6px;
      background: #fff;
      box-shadow: 0 0 8px  #669999;
      }
      .banner {
      position: relative;
      height: 300px;
      background-size: cover;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      }
      .banner::after {
      content: "";
      background-color: #cce6ff;
      position: absolute;
      width: 100%;
      height: 100%;
      }
      input, select, textarea {
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 3px;
      }
      input {
      width: calc(100% - 10px);
      padding: 5px;
      }
      input[type="date"] {
      padding: 4px 5px;
      }
      textarea {
      width: calc(100% - 12px);
      padding: 5px;
      }
      .item:hover p, .item:hover i, .question:hover p, .question label:hover, input:hover::placeholder {
      color:  #669999;
      }
      .item input:hover, .item select:hover, .item textarea:hover {
      border: 1px solid transparent;
      box-shadow: 0 0 3px 0  #669999;
      color: #669999;
      }
      .item {
      position: relative;
      margin: 10px 0;
      }
      .item span {
      color: red;
      }
      .week {
      display:flex;
      justfiy-content:space-between;
      }
      .colums {
      display:flex;
      justify-content:space-between;
      flex-direction:row;
      flex-wrap:wrap;
      }
      .colums div {
      width:48%;
      }
      input[type="date"]::-webkit-inner-spin-button {
      display: none;
      }
      .item i, input[type="date"]::-webkit-calendar-picker-indicator {
      position: absolute;
      font-size: 20px;
      color:  #a3c2c2;
      }
      .item i {
      right: 1%;
      top: 30px;
      z-index: 1;
      }
      input[type=radio], input[type=checkbox]  {
      display: none;
      }
      label.radio {
      position: relative;
      display: inline-block;
      margin: 5px 20px 15px 0;
      cursor: pointer;
      }
      .question span {
      margin-left: 30px;
      }
      .question-answer label {
      display: block;
      }
      label.radio:before {
      content: "";
      position: absolute;
      left: 0;
      width: 17px;
      height: 17px;
      border-radius: 50%;
      border: 2px solid #ccc;
      }
      input[type=radio]:checked + label:before, label.radio:hover:before {
      border: 2px solid  #669999;
      }
      label.radio:after {
      content: "";
      position: absolute;
      top: 6px;
      left: 5px;
      width: 8px;
      height: 4px;
      border: 3px solid  #669999;
      border-top: none;
      border-right: none;
      transform: rotate(-45deg);
      opacity: 0;
      }
      input[type=radio]:checked + label:after {
      opacity: 1;
      }
      .flax {
      display:flex;
      justify-content:space-around;
      }
      .btn-block {
      margin-top: 10px;
      text-align: center;
      }
      button {
      width: 150px;
      padding: 10px;
      border: none;
      border-radius: 5px;
      background:  #669999;
      font-size: 16px;
      color: #fff;
      cursor: pointer;
      }
      button:hover {
      background:  #a3c2c2;
      }
      @media (min-width: 568px) {
      .name-item, .city-item {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      }
      .name-item input, .name-item div {
      width: calc(50% - 20px);
      }
      .name-item div input {
      width:97%;}
      .name-item div label {
      display:block;
      padding-bottom:5px;
      }
      }

      .center-question {
        text-align: center;
        width: 100%;
      }

      .center-options {
        display: inline-block;
      }

      .checkboxes {
        text-align: center;
        padding-left: 47%;
        padding-right: 43%;
      }

      .kids-ages-options li {
        display: inline-block;
        font-size: 20px;
        padding: 20px;
      }

      .kids-options {
        padding-right: 2.5%;
      }

      .income-checkboxes li {
        display: inline-block;
        padding-left: 45%;
        padding-right: 40%;
        width: 100%;
      }

      .income {
        padding-right: 2.5%;
        text-align: center;
      }

      .income-options div {
        display: inline-block;
        font-size: 20px;
        padding-left: 10px;
        padding-right: 10px;
      }

      .equity-options div {
        display: inline-block;
        font-size: 20px;
        padding-left: 5px;
        padding-right: 5px;
      }

      .navbar {
    background-color: #0000e6;
    height: 150px;
  }

.navbar-title {
  color: white;
  text-align: center;
  padding-left: 50%;
  padding-bottom: 15px;
  text-decoration: none;
  padding-top:75px;
}

.navbar-options {
  text-align: right;
  padding-right: 5%;
  color: limegreen;
}

.experience-years {
  padding-right: 38px;
}

.client-amount div {
  display: inline-block;
  font-size: 20px;
  padding-left: 5px;
  padding-right: 5px;
}

.short-input-bar {
  width: 30%;
}

.avg-input-bar {
  width: 50%;
}

.center-input {
  text-align: center;
}

.advisor-client-box {
  text-align:center;
  font-size: 50px;
  width: 70%;
  height: 500px;
  margin-top: 75px;
}

.advisor-client-question {
  font-size: 50px;
}

.client-box {
  border: 3px solid;
  padding: 30% 30%;
  position: relative;
  top: 240px; left: 0px;
  text-align:center;
  background-color: #0000e6;
  color: white;
  text-decoration: none;
  font-size: 75px;
  margin-top: 50px;
  border-radius: 25px;
  font-family:Roboto, Arial, sans-serif
}

.advisor-box {
  border: 3px solid;
  padding: 30% 25%;
  position: relative;
  top: 240px; left: 0px;
  text-align:center;
  background-color: #0000e6;
  color: white;
  text-decoration: none;
  font-size: 75px;
  margin-top: 50px;
  border-radius: 25px;
  font-family:Roboto, Arial, sans-serif
}

// .navbar-selections {
//   background-color: white;
//   color: white;
//   padding: 14px 25px;
//   text-align: center;
//   display: inline-block;
// }
.navbar-selections {
  a:link, a:visited {
    font-size: 15px;
    background-color: #0000e6;
    color: white;
    border: 2px solid white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
  }

  a:hover, a:active {
    font-size: 15px;
    background-color: grey; opacity: .5;
    border: 2px solid white; opacity: 1;
    color: white; opacity: 1;
  }
}

 a.advisor-box:hover, a.client-box:hover {
  background-color: grey; opacity: .5;
  color: white;
  text-decoration: none;
}


/*
=====
DEMO DEPENDENCIES
=====
*/

/* The component will reset button browser styles */

.r-button{
  --uirButtonBackgroundColor: var(--rButtonBackgroundColor, transparent);
  --uirButtonPadding: var(--rButtonPadding, var(--rButtonPaddingTop, 0) var(--rButtonPaddingRight, 0) var(--rButtonPaddingBottom, 0) var(--rButtonPaddingLeft, 0));
  --uirButtonBorderWidth: var(--rButtonBorderWidth, 0);
  --uirButtonBorderStyle: var(--rButtonBorderWidth, solid);
  --uirButtonBorderColor: var(--rButtonBorderColor, currentColor);
  --uirButtonFontFamily: var(--rButtonFontFamily, inherit);
  --uirButtonFontSize: var(--rButtonFontSize,  inherit);
  --uirButtonColor: var(--rButtonColor);

  background-color: var(--uirButtonBackgroundColor);
  padding: var(--uirButtonPadding);

  border-width: var(--uirButtonBorderWidth);
  border-style: var(--uirButtonBorderStyle);
  border-color: var(--uirButtonBorderColor);

  cursor: pointer;

  font-family: var(--uirButtonFontFamily);
  font-size: var(--uirButtonFontSize);
}

.r-button::-moz-focus-inner,
.r-button[type="button"]::-moz-focus-inner,
.r-button[type="reset"]::-moz-focus-inner,
.r-button[type="submit"]::-moz-focus-inner {

  /* Remove the inner border and padding in Firefox. */

  border-style: none;
  padding: 0;
}

/* The component will reset browser's styles of link */

.r-link{
  --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
  --uirLinkTextColor: var(--rLinkTextColor);
  --uirLinkTextDecoration: var(--rLinkTextDecoration, none);
  display: var(--uirLinkDisplay) !important;
  color: var(--uirLinkTextColor) !important;
  text-decoration: var(--uirLinkTextDecoration) !important;
}

/*
=====
CORE STYLES
=====
*/

.ai-element{
	--uiaiElementDisplay: var(--aiElementDisplay, inline-flex);
	--uiaiElementPadding: var(--aiElementPadding, var(--aiElementPaddingTop, 0) var(--aiElementPaddingRight, 0) var(--aiElementPaddingBottom, 0) var(--aiElementPaddingLeft, 0));
	--uiaiElementColor: var(--aiElementColor);

	display: var(--uiaiElementDisplay);
	position: relative;
	overflow: hidden;
}

a.ai-element{
	padding: var(--uiaiElementPadding);
}

button.ai-element{
	--rButtonPadding: var(--uiaiElementPadding);
}

.ai-element__label{
  color: white;
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: 13px;
  padding-right: 13px;
  a:link, a:visited {
    color: white;
    text-align: center;
    text-decoration: none;
    display: inline-block;
  }
}

//Styles of elements with the border on all sides

.ai-element_type1{
	--uiaiElementLineWeight: var(--aiElementLineWeight, 3px);
	--uiaiElementLineColor: var(--aiElementLineColor, #000);
}

.ai-element_type1::before,
.ai-element_type1::after{
	width: 100%;
	height: var(--uiaiElementLineWeight);
	left: 0;
}

.ai-element_type1::before{
	top: 0;
}

.ai-element_type1::after{
	bottom: 0;
}

.ai-element_type1 .ai-element__label::before,
.ai-element_type1 .ai-element__label::after{
	width: var(--uiaiElementLineWeight);
	height: 100%;
	top: 0;
}

.ai-element_type1 .ai-element__label::before{
	left: 0;
}

.ai-element_type1 .ai-element__label::after{
	right: 0;
}

.ai-element_type1::before,
.ai-element_type1::after,
.ai-element_type1 .ai-element__label::before,
.ai-element_type1 .ai-element__label::after{
	content: "";
	background-color: var(--uiaiElementLineColor);
	position: absolute;
	opacity: 1;

	will-change: transform, opacity;
	transition-property: transform, opacity;
}

.ai-element_type1:hover::before,
.ai-element_type1:hover::after,
.ai-element_type1:hover .ai-element__label::before,
.ai-element_type1:hover .ai-element__label::after{
	opacity: 0;
}

/*
Styles of elements with the bottom border
*/

.ai-element_type2{
	--uiaiElementLineWeight: var(--aiElementLineWeight, 2px);
	--uiaiElementLineColor: var(--aiElementLineColor, #000);
	--aiElementPaddingBottom: var(--uiaiElementLineWeight);

	position: relative;
}

.ai-element_type2::after{
	content: "";
	width: 100%;
	height: var(--uiaiElementLineWeight);
	background-color: var(--uiaiElementLineColor);

	position: absolute;
	left: 0;
	bottom: 0;
}

/*
Styles of elements with background
*/

.ai-element_type3 {
	--uiaiElementLineColor: var(--aiElementLineColor, #000);
	--uiaiElementPadding: var(--aiElementPadding, 10px);
	transition: color .3s ease-out;
	z-index: 1;
}

.ai-element_type3::before,
.ai-element_type3::after{
	content: "";
	background-color: var(--uiaiElementLineColor);
	opacity: 1;
	position: absolute;
	z-index: -1;

	transition: transform .35s ease-out, opacity .35s ease-out .03s;
}

.ai-element_type3:hover::before,
.ai-element_type3:hover::after{
	opacity: 0;
	transition-delay: 0s;
}

.ai-element_text::before{
	content: attr(data-ai-element-text);
	color: var(--uiaiElementColorHover);
	position: absolute;
}

.ai-element_text::before,
.ai-element_text .ai-element__label{
	transition-property: transform;
	transition-timing-function: cubic-bezier(.86, .6, .08, 1.01);
	transition-duration: .4s;
}

.ai-element_text:hover::before,
.ai-element_text:hover .ai-element__label{
	transition-duration: .3s;
}

/*
=====
EFFECTS
=====
*/

/* effect 1 */

.ai-element1::before,
.ai-element1::after,
.ai-element1 .ai-element__label::before,
.ai-element1 .ai-element__label::after{
	transform: translate3d(0, 0, 0);
	transition-timing-function: ease-out;
	transition-duration: .2s, .15s;
}

.ai-element1:hover::before,
.ai-element1:hover::after,
.ai-element1:hover .ai-element__label::before,
.ai-element1:hover .ai-element__label::after{
	transition-duration: .25s;
}

.ai-element1:hover::before{
	transform: translate3d(-105%, 0, 0);
}

.ai-element1:hover::after{
	transform: translate3d(105%, 0, 0);
}

.ai-element1:hover .ai-element__label::before{
	transform: translate3d(0%, -100%, 0);
}

.ai-element1:hover .ai-element__label::after{
	transform: translate3d(0%, 100%, 0);
}

/* effect 2 */

.ai-element2::after{
	transform: translate3d(0, 0, 0);
	transition: transform .2s ease-in;
}

.ai-element2:hover::after{
	transform: translate3d(-100%, 0, 0);
}

/* effect 3 */

.ai-element3::after{
	opacity: 1;
	transform: translate3d(0, 0, 0);
	transition: transform .3s ease-out, opacity .3s ease-out;
}

.ai-element3:hover::after{
	opacity: 0;
	transform: translate3d(0, 100%, 0);
}

/* effect 4 */

.ai-element4::before,
.ai-element4::after,
.ai-element4 .ai-element__label::before,
.ai-element4 .ai-element__label::after{
	transition-timing-function: ease-out;
	transition-duration: .2s, .2s;
	transform: translate3d(0, 0, 0);
}

.ai-element4:hover::before,
.ai-element4:hover::after,
.ai-element4:hover .ai-element__label::before,
.ai-element4:hover .ai-element__label::after{
	transition-delay: 0s, .05s;
}

.ai-element4:hover::before{
	transform: translate3d(-100%, 0, 0);
}

.ai-element4:hover::after{
	transform: translate3d(100%, 0, 0);
}

.ai-element4:hover .ai-element__label::before{
	transform: translate3d(0, 100%, 0);
}

.ai-element4:hover .ai-element__label::after{
	transform: translate3d(0, -100%, 0);
}

/* effect 5 */

.ai-element5::before,
.ai-element5::after,
.ai-element5 .ai-element__label::before,
.ai-element5 .ai-element__label::after{
	transition-duration: .2s;
	transition-timing-function: ease-out;
	transform: translate3d(0, 0, 0);
}

.ai-element5::before,
.ai-element5::after{
	width: 100%;
	height: var(--uiaiElementLineWeight);
	left: 0;
}

.ai-element5 .ai-element__label::before,
.ai-element5 .ai-element__label::after{
	width: var(--uiaiElementLineWeight);
	height: 100%;
	top: 0;
}

.ai-element5::before{
	top: 0;
}

.ai-element5::after{
	bottom: 0;
}

.ai-element5 .ai-element__label::before{
	left: 0;
}

.ai-element5 .ai-element__label::after{
	right: 0;
}

.ai-element5:hover::before,
.ai-element5:hover .ai-element__label::before{
	transition-delay: 0s;
}

.ai-element5::after,
.ai-element5:hover .ai-element__label::after{
	transition-delay: .25s;
}

.ai-element5 .ai-element__label::after,
.ai-element5:hover::after{
	transition-delay: .15s;
}

.ai-element5 .ai-element__label::before,
.ai-element5:hover::before{
	transition-delay: .35s;
}

.ai-element5:hover::before{
	transform: translate3d(-105%, 0, 0);
}

.ai-element5:hover::after{
	transform: translate3d(105%, 0, 0);
}

.ai-element5:hover .ai-element__label::before{
	transform: translate3d(0, 105%, 0);
}

.ai-element5:hover .ai-element__label::after{
	transform: translate3d(0, -105%, 0);
}

/* effect 6 */

.ai-element6::before,
.ai-element6::after{
	width: 50%;
	height: 100%;
	top: 0;
	transform: translate3d(0, 0, 0);
}

.ai-element6::before{
	left: 0;
}

.ai-element6::after{
	right: 0;
}

.ai-element6:hover::before{
	transform: translate3d(-100%, 0, 0);
}

.ai-element6:hover::after{
	transform: translate3d(100%, 0, 0);
}

/* effect 7 */

.ai-element7::before,
.ai-element7::after{
	width: 100%;
	height: 50%;
	left: 0;
	transform: translate3d(0, 0, 0);
}

.ai-element7::before{
	top: 0;
}

.ai-element7::after{
	bottom: 0;
}

.ai-element7:hover::before{
	transform: translate3d(0, -50%, 0);
}

.ai-element7:hover::after{
	transform: translate3d(0, 50%, 0);
}

/* effect 8 */

.ai-element8::before,
.ai-element8::after{
	width: 51%;
	height: 100%;
	transform: rotate(0);
	top: 0;
}

.ai-element8::before{
	left: 0;
}

.ai-element8::after{
	right: 0;
}

.ai-element8:hover::before,
.ai-element8:hover::after{
	transform: rotate(360deg);
}

/* effect 9 */

.ai-element9::before,
.ai-element9::after{
	width: 51%;
	height: 100%;
	top: 0;
	transform: translate3d(0, 0, 0);
}

.ai-element9::before{
	left: 0;
}

.ai-element9::after{
	right: 0;
}

.ai-element9:hover::before{
	transform: translate3d(-100%, 0, 0) rotate(-45deg);
}

.ai-element9:hover::after{
	transform: translate3d(100%, 0, 0) rotate(-45deg);
}

/*
=====
DEMO STYLES
=====
*/

body{
  font-family: -apple-system, BlinkMacSystemFont, "Roboto", "Open Sans", "Helvetica Neue", "Segoe UI", "Arial", sans-serif;
  font-size: 16px;
  margin: 0;
}

.section{
  display: flex;
  min-height: 300px;
  text-align: center;

  font-size: 17px;
  font-weight: 700;
}

.section:nth-child(2n+1){
}

.section__item{
  margin: auto;
}

.section__box:nth-child(n+2){
  margin-top: 40px;
}

.ai-element__label{
	--uiaiElementColorHover: var(--aiElementColorHover);
	font-weight: 700;
	text-transform: uppercase;
}

.ai-element:hover .ai-element__label{
	color: var(--uiaiElementColorHover);
}

/*
=====
SETTINGS
=====
*/

.ai-element{
	--aiElementLineWeight: 5px;
	--aiElementLineColor: white;
	--aiElementColor: #1b255a;
	--aiElementColorHover: #243aab;
}

.ai-element_type1,
.ai-element_type3{
	--aiElementPadding: 10px 15px;
}

.ai-element_type3{
	--aiElementColor: #fff;
}
